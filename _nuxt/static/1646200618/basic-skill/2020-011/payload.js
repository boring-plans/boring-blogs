__NUXT_JSONP__("/basic-skill/2020-011", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu){cw.slug="2020-011";cw.title="ES6 必会总结";cw.date="2020-12-21T00:00:00.000Z";cw.category="军体拳";cw.toc=[{id:cx,depth:W,text:cy},{id:aQ,depth:W,text:aQ},{id:aR,depth:G,text:aR},{id:aS,depth:G,text:aS},{id:aT,depth:G,text:aT},{id:aU,depth:W,text:aU},{id:aV,depth:G,text:aV},{id:aW,depth:G,text:aW},{id:aX,depth:G,text:aX},{id:aY,depth:G,text:aY},{id:aZ,depth:G,text:aZ},{id:cz,depth:G,text:cA},{id:cB,depth:G,text:ai},{id:cC,depth:G,text:bD}];cw.body={type:bE,children:[{type:a,tag:X,props:{id:cx},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#let--const",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:cy}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"众所周知，通过 var 声明的变量没有块级作用域，而 let 有。你比如说："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:at}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bF}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cD}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cE}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:a_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cF}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:a$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:au}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cH}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F var 的作用域是整个函数，所以哪怕 for 逻辑之外也可以访问到"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:at}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cD}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cE}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:a_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cF}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cH}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 而 let 的作用域是块，for 之外无法访问"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"此外，let 不可以相同变量重新声明，而 var 可以："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:bF}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:aG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:bF}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cI}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:aG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cI}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"; "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F SyntaxError: Identifier 'bar' has already been declared"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"再外，申明全局变量时，通过 var 申明的变量，会自动成为全局对象 "},{type:a,tag:i,props:{},children:[{type:b,value:"window "}]},{type:b,value:"的属性，而 let 则不会。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"至于 let 与 const，let 用以声明变量，const 用以声明常量。"}]},{type:b,value:e},{type:a,tag:X,props:{id:aQ},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aQ}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"解构赋值在对象、基本数据类型上均可以使用："}]},{type:b,value:e},{type:a,tag:H,props:{id:aR},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aR}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" [a, b] "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:aG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"13"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 可以据此进行变量的值交换"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:a_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:","}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"  bar "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" (("}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:aG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:")[(foo, bar)] "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" [bar, foo]);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:aS},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AF%B9%E8%B1%A1",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aS}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 123 -\u003E foo, \"baz\" -\u003E bar"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bH}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:"id"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:": foo, "}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:bI}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:": bar } "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" { id: "}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:", name: "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:cJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" { foo, bar } "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" { foo: "}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:", bar: "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" }; "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 此时要求变量名为对象属性名称"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:aT},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E6%AD%A4%E5%A4%96",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aT}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cK}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cL}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cM}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cN}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cN}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cO}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 申明时直接初始化，此时最终，foo 为 1，bar 为 2"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cK}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cL}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cM}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cP}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cP}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cO}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 不同于 undefined，null 可用于赋值，则此时 foo、bar 皆为 null"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:X,props:{id:aU},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E4%B8%80%E4%BA%9B%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aU}]},{type:b,value:e},{type:a,tag:H,props:{id:aV},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%89%A9%E5%B1%95",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aV}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"主要是一系列帮助函数，你比如："}]},{type:b,value:e},{type:a,tag:F,props:{id:aH},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#includes",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aH}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"顾名思义，等效于其他语言中诸如 contains 的函数："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:A},children:[{type:b,value:bK}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aH}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F true \u002F\u002F 特殊地，大家总 includes.(\"\") 总真"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"startswithendswith"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#startswithendswith",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:"startsWith、endsWith"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"用于判断某字符串是否以什么什么开头或结尾："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:A},children:[{type:b,value:bK}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"startsWith"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:av}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:ba}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:A},children:[{type:b,value:bK}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"endsWith"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:ba}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:bL},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#repeat",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bL}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"用于生成重复的字符串，你比如说："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:A},children:[{type:b,value:bM}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F \"888\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"padstart"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#padstart",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:cQ}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在字符串前添加 “pad”，你比如说："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:A},children:[{type:b,value:bM}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:cQ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:bM}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F \"888\"，两个参数分别为 maxLength、fillString"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:cR},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:cR}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"模板字符串是与传统 CStyle 先占位后赋值不同的另一种实现动态字符串的方式："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"10086"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:cS}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"`${"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"} is 10086`"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F \"10086 is 10086\" \u002F\u002F 以单反引号包裹，通过 ${} 组合操作符获取变量的值"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:aW},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aW}]},{type:b,value:e},{type:a,tag:F,props:{id:aw},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#map",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aw}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"与 forEach 不同，map 函数返回 由依次执行所传入匿名函数结果组成的新数组，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bb}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cT}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aw}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ax}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ay}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:bN}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:bO}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:bP},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#filter",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bP}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"与 map 一样，皆可以遍历可迭代对象的诸项，但其返回的数组是 由满足所传入匿名函数（理想状态下，传入的函数应该是一个可以明确返回真假值的函数（不理想时，则总是返回真））的原对象的各项组成，起到了一个过滤的作用，你比如说："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bb}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cT}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bP}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ax}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bc}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [3, 4]"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"someevery"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#someevery",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:"some、every"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"用于判断各元素是否满足某条件，some 当有元素满足条件时返回 true，而 every 需要各元素都满足："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bb}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bQ}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bd}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"some"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ax}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bc}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:ba}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"  [("}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:")]."}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"every"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ax}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bc}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:aI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:bR},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#find",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bR}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"用于找到 第一个使得所传函数返回真 的元素，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bR}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ax}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:az}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 2"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:bS},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#fill",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bS}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"用于填充，所谓填充，即用 固定值 替换数组中的 指定的诸元素，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"6"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cU}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bS}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cV}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cU}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [1,2,7,7,7] \u002F\u002F 三个参数分别为 用于替换的固定值、开始索引、结束索引（左闭右开）"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"arrayfrom"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#arrayfrom",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:"Array.from"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"用于将任何有 length 属性的对象转化为数组，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bH}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bT}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"first\""}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bT}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"second\""}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:", length: "}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:"Array"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"from"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cW}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [\"first\", \"second\"] \u002F\u002F 对象 key 应为数组索引，否则转化成的数组诸项皆为 undefined"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"includes-1"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#includes-1",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aH}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"判断是否包含："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aH}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:aI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:cX},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E9%81%8D%E5%8E%86%E6%96%B9%E5%BC%8F",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:cX}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"花式遍历数组的方式："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 1. for in array - 得到索引"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:"in"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cY}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:au}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:a$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:be}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 0 1 2 3"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 2. for of array - 得到元素"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bU}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cY}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:au}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:a$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:be}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:bV}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 3. for of array.keys() - keys() 迭代器生成索引"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bU}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cZ}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bW}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:c_}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:au}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(foo[i]);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:be}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:bV}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 4. for of array.entries() - entries() 迭代器生成 索引-值 键值对"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Y}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bU}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cZ}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:c$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:c_}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:au}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:a$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:be}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [0, 1] [1, 2] [2, 4] [3, 3]"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"当然，也可以 forEach（以及 map 等）："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bX}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ax}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aA}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(i)); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:bV}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:aX},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A9%E5%B1%95",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aX}]},{type:b,value:e},{type:a,tag:F,props:{id:da},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%8F%82%E6%95%B0%E7%BC%BA%E7%9C%81%E5%80%BC",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:da}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"即为函数参数指定默认值："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:aB}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bY}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ay}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aC}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"其中需要注意，当参数同时有 指定默认值的 和 不指定默认值的混合使用时，需要把指定默认值的参数放到后面，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:aB}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bY}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ay}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aC}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"rest-参数"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#rest-%E5%8F%82%E6%95%B0",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:"rest 参数"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"rest 参数通过 "},{type:a,tag:i,props:{},children:[{type:b,value:$}]},{type:b,value:" 操作符，将除列出的参数外，剩余的参数赋值给一个参数，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:"s"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:au}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(s);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:l},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [4, 3, 2]"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"另外，"},{type:a,tag:i,props:{},children:[{type:b,value:$}]},{type:b,value:" 操作符是个好东西，它的作用是将一个某容器（数组、对象等）展开，通过它可以方便地进行数组、对象的深复制，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"foo];"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" baz "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aD}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bZ}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bH}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"baz };"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"此外，通过 "},{type:a,tag:i,props:{},children:[{type:b,value:$}]},{type:b,value:" 还可以方便地进行一些操作，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:a_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"9"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:cV}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:aG}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bQ}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"8"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"11"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bQ}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 找最大值"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:"Math"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"max"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"foo) "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 12 \u002F\u002F 此处 ...foo 从现象上看，可以理解为没有中括号的 10, 9, 7, 3, 12, 1"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 组合数组"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bb}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"foo, "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"bar] "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [10, 9, 7, 3, 12, 1, 8, 11]"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:db},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:db}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"箭头函数是个好东西，有了它可以更优雅、简洁地写匿名函数："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 1. 通过 function 关键字"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aw}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ao}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:dc}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dd}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ay}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:bN}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"}); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:bO}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 2. 箭头函数"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aw}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:dc}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dd}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ay}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:bN}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:bO}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"当需要传入多个参数（以及不传参数）的时候，需要在箭头左侧加上括号，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:aB}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bY}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ay}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aC}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"当然，也可以在箭头右侧通过大括号以及显式的返回值，处理更复杂的逻辑："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:aB}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:b_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" (a "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:bc}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aC}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:aJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:"456"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:de}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:aY},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aY}]},{type:b,value:e},{type:a,tag:F,props:{id:df},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%8F%98%E9%87%8F%E5%92%8C%E5%B1%9E%E6%80%A7%E5%90%8C%E5%90%8D",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:df}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"当变量和属性同名时，可以简写："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" name "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:av}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" { name };"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:cS}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(bar); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F {name: \"foo\"}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:dg},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%87%BD%E6%95%B0%E5%B1%9E%E6%80%A7%E5%8F%AF%E4%BB%A5%E7%AE%80%E5%86%99",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dg}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:dh}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:at}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:b$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:di}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:de}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:dj}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"函数也可以写成键值对形式："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bT}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" () {"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:b$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:di}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"}; "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 或者 {bar: ()=\u003Econsole.log(\"bar\")}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:dj}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"对象中的属性方法可以是变量"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E6%96%B9%E6%B3%95%E5%8F%AF%E4%BB%A5%E6%98%AF%E5%8F%98%E9%87%8F",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:"对象中的属性、方法可以是变量"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:dh}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"name\""}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bZ}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:dk}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" { [foo]: "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:cJ}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:", [quz]: () "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aA}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"boom\""}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:") };"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"bar.name; "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F baz"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:dl}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"whatever"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F boom"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:dm},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%AF%94%E8%BE%83",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dm}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"通过 Object.is 比较两个对象的地址，等效于 "},{type:a,tag:i,props:{},children:[{type:b,value:az}]},{type:b,value:bf}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aD}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aK}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aD}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aK}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:bg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"is"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(foo, bar); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:aI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:dn},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%81%8D%E5%8E%86",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dn}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"通过 Object.keys() 可以将对象 keys 转化为一个数组，而后遍历之，即可依次取出对象 values，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aD}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aK}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ca}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:bg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bW}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:do0}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bX}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:"k"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aA}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(foo[k])); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:dp}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"而类似地，Object.values() 可以直接将 values 转化为一个数组，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aD}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aK}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ca}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:bg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:cb}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:do0}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bX}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:"v"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aA}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(v)); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:dp}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"另外，通过 Object.entries() 可以将键值对转化为数组，亦可以方便地遍历对象："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aD}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aK}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ca}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:am}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:bg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:c$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cW}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [\"a\", 1] [\"b\": 2] [\"c\": 3]"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:aZ},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E6%89%A9%E5%B1%95",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aZ}]},{type:b,value:e},{type:a,tag:F,props:{id:bh},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#set",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bh}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"所谓 set，集合也，主要特征为元素（元素可以为基本类型和对象的混合）不重复："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 从数组创建 集合"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bi}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cc}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cd}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ce}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:dq}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"带有的主要方法包括："},{type:a,tag:i,props:{},children:[{type:b,value:aE}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:bj}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:dr}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:bk}]},{type:b,value:bf}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bi}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cc}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cd}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aE}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F Set(3) {1, 2, 3}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:dq}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:dr}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:aI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bk}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F Set(0) {}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"集合的遍历可以通过其 keys()、values() 函数，二者返回值相同："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bi}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cc}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:cd}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bW}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:ds}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:cb}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:ds}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"此外，通过 set 可以实现对数组的去重，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:af}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:al}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bi}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(foo);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"foo "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:S}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:$}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dl}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:cb}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"()]; "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F [1, 2, 3]"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:"map-1"},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#map-1",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aw}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"所谓 map，键值对也，即每个元素为一对数据，包括键、值，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dt}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:du}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:aL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"]]); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 按理说一个 map 中应该有很多对键值，因此从现象上看，如同一个二维数组"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ce}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F Map(1) {\"a\" =\u003E 1}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"map 的操作函数包括："},{type:a,tag:i,props:{},children:[{type:b,value:"set "}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:dv}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:bj}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:"size"}]},{type:b,value:" 、"},{type:a,tag:i,props:{},children:[{type:b,value:bk}]},{type:b,value:bf}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dt}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:du}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:aL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"]]);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:dv}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:aL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 1"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bh}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:aL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F Map(1) {\"a\" =\u003E 2}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bh}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"b\""}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:L}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F Map(2) {\"a\" =\u003E 2, \"b\" =\u003E 3}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:aL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F true, 此时 foo: Map(1) {\"b\" =\u003E 3}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"foo.size; "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 1 \u002F\u002F 为一个属性而不是方法"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:O}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bk}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aq}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 此时 foo: Map(0) {}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:cz},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#class-%E8%AF%AD%E6%B3%95%E7%B3%96",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:cA}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"Es6 中声明一个类如下："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:cf}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:aB}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ar}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dw}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dx}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ar}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dy}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aC}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"其中，类内可省略 "},{type:a,tag:i,props:{},children:[{type:b,value:ad}]},{type:b,value:" 关键字，且通过 "},{type:a,tag:i,props:{},children:[{type:b,value:ar}]},{type:b,value:" 可实现类属性的申明。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"另外，类可以通过 extends 实现集成，通过 super 调用父类的方法或者构造函数。你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:cf}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ar}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dw}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dx}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bl}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:at}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ar}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:".a);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:cf}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:"extends"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cg}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:k}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:aB}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dz}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(a); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 调用父类构造函数"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ar}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dy}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aC}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bl}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:at}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dz}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bl}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bm}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ar}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:".b);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bZ}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ap}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:b$}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"quz."}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:bl}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bm}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:cB},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#symbol",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ai}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"所谓 symbol，象征、代号也，其生而为了独一无二，以解决属性名称重复的冲突。即便是相同的描述，对应的 Symbol 也不同，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:ai}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:av}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:az}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ai}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:av}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:aI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"通过 Symbol，我们可以安全地为某个对象动态添加属性："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:z}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:I}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:" {};"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:dA}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ai}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dB}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:dA}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ai}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dB}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:ag}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Z}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ce}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F Symbol(bar): \"bar\", Symbol(bar): \"bar\"}"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"另外，我们也可以通过 Symbol.for() 的方式生成 symbol，但是这种方式生成 symbol 时，会先全局判断是否有相同描述的 symbol 已经被申明过，若是返回旧有的，否则才生成新的。这意思是："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:h},children:[{type:b,value:ai}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:av}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:az}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:ai}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:aj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:B}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:av}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:ba}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:H,props:{id:cC},children:[{type:a,tag:k,props:{ariaHidden:o,href:"#promise",tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bD}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"Promise 是异步编程的解决方案，可以将 Promise 对象 理解为保存了未来结果的对象。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"Promise 对象有三种状态，包括 "},{type:a,tag:i,props:{},children:[{type:b,value:"pending"}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:dC}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:dD}]},{type:b,value:"，分别表示 进行中（阻塞中）、成功、失败，后二者会分别执行 "},{type:a,tag:i,props:{},children:[{type:b,value:ch}]},{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:ci}]},{type:b,value:" 回调，一个用于示意的基本例子如下："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 假定有一个请求函数 request"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 其返回是形如 {status:200, data: \"\"} 的标准的 http请求返回"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:cj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:an}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:bD}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ch}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:ci}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dE}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:dF}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bm}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:b_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dG}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:az}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dH}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ch}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:dJ}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:dK}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:ci}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(req.message); "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 或者说直接 reject(\"失败！\") 等"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"});"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"由上述可见，通过 resolve 将状态由 pending 转为 "},{type:a,tag:i,props:{},children:[{type:b,value:dC}]},{type:b,value:"，通过 reject 将状态由 pending 转为 "},{type:a,tag:i,props:{},children:[{type:b,value:dD}]},{type:b,value:"。得到了 Promise 实例后，我们可以通过 then、catch 链式分别获取到 resolve、reject 的值。接着上述示例，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:T}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bd}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"then"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:"data"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aA}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(data)) "}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 链式得到的返回值依旧是一个 promise"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bd}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"catch"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:V}]},{type:a,tag:c,props:{style:E},children:[{type:b,value:"err"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:P}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:aA}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(err))"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:bd}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:"finally"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(() "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:R}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ac}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 做一些收尾操作"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"  });"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"而 ECMAScript 2017 标准提出了 "},{type:a,tag:i,props:{},children:[{type:b,value:"async\u002Fawait"}]},{type:b,value:" 语法糖，使得异步编程更为简洁。上述例子的基本逻辑也可以写成："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:g},children:[{type:b,value:dL}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:T}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:at}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:cj}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dE}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:y}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:dM}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:dF}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:bm}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:b_}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dG}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:az}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:n}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:dH}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:U}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:dI}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:dJ}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:dK}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:ab}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{style:l},children:[{type:b,value:K}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"(req.message);"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:aa}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:N}]},{type:a,tag:c,props:{style:m},children:[{type:b,value:"\u002F\u002F 而后一些收尾操作"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:ae}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"其中，"},{type:a,tag:i,props:{},children:[{type:b,value:dL}]},{type:b,value:" 用于装饰 函数，"},{type:a,tag:i,props:{},children:[{type:b,value:dM}]},{type:b,value:"用于装饰异步请求，这样一来程序逻辑只要顺序书写即可。"}]}]};cw.dir=ck;cw.path="\u002F2020-011";cw.extension=cl;cw.createdAt=aF;cw.updatedAt=aF;cw.categoryAlias=dN;return {data:[{post:cw}],fetch:{},mutations:[["SET_POST",cw],["SET_LAST_POST",{slug:"2021-001",title:"Git 基操",date:"2021-03-16T00:00:00.000Z",category:dN,toc:[{id:bn,depth:W,text:bn},{id:bo,depth:W,text:bo},{id:dO,depth:G,text:dP},{id:dQ,depth:G,text:dR},{id:bp,depth:W,text:bp},{id:bq,depth:G,text:bq},{id:dS,depth:G,text:dT},{id:dU,depth:W,text:dV},{id:br,depth:G,text:br},{id:bs,depth:W,text:bs},{id:aE,depth:G,text:aE},{id:bt,depth:G,text:bt},{id:bu,depth:G,text:bu},{id:bv,depth:G,text:bv},{id:bw,depth:G,text:bw},{id:bx,depth:G,text:bx},{id:by,depth:G,text:by}],body:{type:bE,children:[{type:a,tag:X,props:{id:bn},children:[{type:a,tag:k,props:{href:"#%E7%AE%80%E4%BB%8B",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bn}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"相较于 SVN 等集中式版本管理工具，Git 其显著特点包括分布式、强大的分支管理、快、简单。其诞生是为了高效且符合开源精神地解决 Linux 源码管理问题，初代由 Linus 历时两周，使用 C 开发。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"所谓分布式即每个节点都含有完整仓库，都可以在本地进行版本的更新、回滚，版本的管理不必依赖某一个节点（即集中式管理中的中央节点）。但实际上，为了不同节点更便捷地进行版本的同步，往往会有某个（些）节点充当另一意义上的中央（你比如 github、gitee 等）。Git 的运作看起来像这样："}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:a,tag:aM,props:{alt:aN,src:"https:\u002F\u002Fimg-blog.csdnimg.cn\u002F20210312161433791.png?x-oss-process=image\u002Fwatermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNTI5ODg=,size_16,color_FFFFFF,t_70"},children:[]},{type:b,value:e},{type:a,tag:"small",props:{style:"text-align: center; display:block"},children:[{type:b,value:"* PS. from "},{type:a,tag:k,props:{href:"https:\u002F\u002Fwww.liaoxuefeng.com\u002Fwiki\u002F896043488029600",rel:[cm,cn,co],target:cp},children:[{type:b,value:"廖雪峰的官方网站"}]}]}]},{type:b,value:e},{type:a,tag:X,props:{id:bo},children:[{type:a,tag:k,props:{href:"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bo}]},{type:b,value:e},{type:a,tag:H,props:{id:dO},children:[{type:a,tag:k,props:{href:"#%E7%89%88%E6%9C%AC%E5%BA%93repository",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dP}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"字面上来看是一个装着所有待管理文件的容器，文件的删除、更新、新增都体现其中。本质上是一个名曰 "},{type:a,tag:i,props:{},children:[{type:b,value:dW}]},{type:b,value:" 的文件夹，同级目录下所有文件（除去 "},{type:a,tag:i,props:{},children:[{type:b,value:dX}]},{type:b,value:" 中被点名的文件们）的各个状态都通过某些神奇魔法记录在其中。"}]},{type:b,value:e},{type:a,tag:H,props:{id:dQ},children:[{type:a,tag:k,props:{href:"#%E5%B7%A5%E4%BD%9C%E5%8C%BA%E6%9A%82%E5%AD%98%E5%8C%BAhead",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dR}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"可以将版本库的神奇魔法简单理解为如下所示（所谓工作区即待管理文件所在目录）："}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:a,tag:aM,props:{alt:aN,src:"https:\u002F\u002Fimg-blog.csdnimg.cn\u002F20210312161451784.png?x-oss-process=image\u002Fwatermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNTI5ODg=,size_16,color_FFFFFF,t_70"},children:[]}]},{type:b,value:e},{type:a,tag:X,props:{id:bp},children:[{type:a,tag:k,props:{href:"#%E9%85%8D%E7%BD%AE",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bp}]},{type:b,value:e},{type:a,tag:H,props:{id:bq},children:[{type:a,tag:k,props:{href:"#%E5%AE%89%E8%A3%85",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bq}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"略"}]},{type:b,value:e},{type:a,tag:H,props:{id:dS},children:[{type:a,tag:k,props:{href:"#nameemailssh-key",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dT}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"初始配置通常包括三项："}]},{type:b,value:e},{type:a,tag:F,props:{id:bI},children:[{type:a,tag:k,props:{href:"#name",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bI}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git config --global user.name "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"蔡嵩松\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"最终表现为："}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:a,tag:aM,props:{alt:aN,src:"https:\u002F\u002Fimg-blog.csdnimg.cn\u002F20210312161508687.png?x-oss-process=image\u002Fwatermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNTI5ODg=,size_16,color_FFFFFF,t_70"},children:[]}]},{type:b,value:e},{type:a,tag:F,props:{id:dY},children:[{type:a,tag:k,props:{href:"#email",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dY}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git config --global user.email "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"css@yunboo.com.cn\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"这个可以用来统计 contribution 等。"}]},{type:b,value:e},{type:a,tag:F,props:{id:"ssh-密钥"},children:[{type:a,tag:k,props:{href:"#ssh-%E5%AF%86%E9%92%A5",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:"ssh 密钥"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在同步数据时，身份校验是必不可少的。众所周知，校验方式有两种，https、ssh。这其实是两种协议，前者在推送远端时会显式地要求输入账号名密码（在 coding 中，是 coding 的账号名密码），而后者需事先通过 ssh-keygen （一般而言一路 enter 即可）生成 ssh 公私密钥，然后将公钥填到相关平台的 ssh 配置中。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"生成密钥："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"ssh-keygen -t rsa -C "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"username@domain\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"windows 下查看公钥："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"notepad "}]},{type:a,tag:c,props:{style:g},children:[{type:b,value:"~"}]},{type:a,tag:c,props:{style:d},children:[{type:b,value:"\u002F.ssh\u002Fid_rsa.pub"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:X,props:{id:dU},children:[{type:a,tag:k,props:{href:"#get-started",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dV}]},{type:b,value:e},{type:a,tag:H,props:{id:br},children:[{type:a,tag:k,props:{href:"#%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%93%E5%BA%93",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:br}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"初始化仓库有两种方式：将本地已有的文件夹初始化为 git 仓库、从远端拉取一个已存在的 git 仓库。"}]},{type:b,value:e},{type:a,tag:F,props:{id:dZ},children:[{type:a,tag:k,props:{href:"#%E4%BB%8E%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:dZ}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"此种方式需要先在相关平台创建空白的仓库。首先需要在目标文件夹内："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git init"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"一个 "},{type:a,tag:i,props:{},children:[{type:b,value:dW}]},{type:b,value:" 文件夹应运而生（实际是在当前目录创建了一个版本库）。而后将需要管理的文件通过 "},{type:a,tag:i,props:{},children:[{type:b,value:d_}]},{type:b,value:" 命令添加到暂存区，一般而言，初始时会添加当前目录除 "},{type:a,tag:i,props:{},children:[{type:b,value:dX}]},{type:b,value:" 中指明文件外所有文件："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git add "}]},{type:a,tag:c,props:{style:h},children:[{type:b,value:Q}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"而后，例行 first commit（暂存区到本地版本库）："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:d$}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"first commit\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"而后，添加远程源："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git remote add origin https:\u002F\u002Fe.coding.net\u002Fyunboo\u002FsmartCampus\u002Frunning-platform.git"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:ea}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:cq}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"其中 "},{type:a,tag:i,props:{},children:[{type:b,value:eb}]},{type:b,value:" 用于指定本地版本库所在分支的远程上流，是 "},{type:a,tag:i,props:{},children:[{type:b,value:"--set-upstream"}]},{type:b,value:" 的简写。"}]},{type:b,value:e},{type:a,tag:F,props:{id:ec},children:[{type:a,tag:k,props:{href:"#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ec}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"首先克隆仓库到本地："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git clone https:\u002F\u002Fe.coding.net\u002Fyunboo\u002FsmartCampus\u002Frunning-platform.git"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:ea}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:cq}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:X,props:{id:bs},children:[{type:a,tag:k,props:{href:"#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bs}]},{type:b,value:e},{type:a,tag:H,props:{id:aE},children:[{type:a,tag:k,props:{href:"#add",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:aE}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:cr},{type:a,tag:i,props:{},children:[{type:b,value:d_}]},{type:b,value:" ："}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"将工作区文件添加到暂存区（stage）"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"将工作区文件的修改更新到暂存区"}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"后接具体文件、文件夹进行单独、批量的添加（"},{type:a,tag:i,props:{},children:[{type:b,value:Q}]},{type:b,value:" 指当前文件夹所有）。"}]},{type:b,value:e},{type:a,tag:H,props:{id:bt},children:[{type:a,tag:k,props:{href:"#commit",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bt}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:cr},{type:a,tag:i,props:{},children:[{type:b,value:cs}]},{type:b,value:" 将暂存区文件提交到版本库，即一次创建了一个版本。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在提交同时，需要为该版本添加一些备注信息。备注可以通过两种方式来添加："}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:a,tag:i,props:{},children:[{type:b,value:cs}]},{type:b,value:" 其后不接任何命令，会在终端会切换为 vim 编辑器，以便编辑、保存一个 "},{type:a,tag:aO,props:{},children:[{type:b,value:"详细的 commit 说明"}]},{type:b,value:aP}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:a,tag:i,props:{},children:[{type:b,value:cs}]},{type:b,value:" 后接 "},{type:a,tag:i,props:{},children:[{type:b,value:"-m"}]},{type:b,value:" 再接一句 "},{type:a,tag:aO,props:{},children:[{type:b,value:"简洁的说明"}]},{type:b,value:bf}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:d$}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:dk}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"事实上，commit 时，需要有东西可提交，所谓有东西可提交包括："}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"有此前未添加到暂存区的文件被加入了"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"已经在暂存区的文件发生了更新（包括修改、被删除等等）"}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"这意味着，在 commit 之前往往需要 add 一把，这便可以通过 "},{type:a,tag:i,props:{},children:[{type:b,value:ct}]},{type:b,value:" 来简化命令（从字面上来看，"},{type:a,tag:i,props:{},children:[{type:b,value:ct}]},{type:b,value:" 意思是在 commit 时先 add 一把）。但需要注意的是，"},{type:a,tag:i,props:{},children:[{type:b,value:ct}]},{type:b,value:" 只会提交已在暂存区的文件状态更新，当有新增文件时，仍需要先 add。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"另外，可以通过 "},{type:a,tag:i,props:{},children:[{type:b,value:"git tag"}]},{type:b,value:" ，为当前版本打上标签。比如 "},{type:a,tag:i,props:{},children:[{type:b,value:"git tag \"hhh\""}]},{type:b,value:" 之后，通过 "},{type:a,tag:i,props:{},children:[{type:b,value:"git log"}]},{type:b,value:" 查看提交日志："}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:a,tag:aM,props:{alt:aN,src:"https:\u002F\u002Fimg-blog.csdnimg.cn\u002F2021031216155141.png"},children:[]}]},{type:b,value:e},{type:a,tag:H,props:{id:bu},children:[{type:a,tag:k,props:{href:"#push",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bu}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在 commit 之后，在已指定上流的前提下，可以通过 "},{type:a,tag:i,props:{},children:[{type:b,value:cu}]},{type:b,value:" 命令将本地版本库推送到远端。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在未指定上流时，可以在 push 时加上 "},{type:a,tag:i,props:{},children:[{type:b,value:eb}]},{type:b,value:" 命令，再接上远端分支，指定上流并提交，你比如："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:cq}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"而后远端的 master 分支便成为本地上流，此后的推送只需要 "},{type:a,tag:i,props:{},children:[{type:b,value:cu}]},{type:b,value:aP}]},{type:b,value:e},{type:a,tag:H,props:{id:bv},children:[{type:a,tag:k,props:{href:"#pull",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bv}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"众所周知，"},{type:a,tag:i,props:{},children:[{type:b,value:"git pull"}]},{type:b,value:" 为 "},{type:a,tag:i,props:{},children:[{type:b,value:cu}]},{type:b,value:" 的相反操作，默认拉取上流最新提交到本地，通过 "},{type:a,tag:i,props:{},children:[{type:b,value:"git pull origin certain-branch"}]},{type:b,value:" 拉取远端某个分支最新提交。"}]},{type:b,value:e},{type:a,tag:H,props:{id:bw},children:[{type:a,tag:k,props:{href:"#stash",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bw}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"有时，在工作区有修改但未提交的状态下，想拉取提交，或者切换分支，可以先 "},{type:a,tag:i,props:{},children:[{type:b,value:"git stash"}]},{type:b,value:" 暂存本地修改到某个神秘空间（看起来本地修改仿佛消失了一样），而后在适宜的时候，"},{type:a,tag:i,props:{},children:[{type:b,value:"git stash pop"}]},{type:b,value:" 将暂存放回本地。"}]},{type:b,value:e},{type:a,tag:H,props:{id:bx},children:[{type:a,tag:k,props:{href:"#%E5%88%86%E6%94%AF",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bx}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"一个仓库可以有多个分支，直到分支合并前，各个分支独立发展。在版本库中，有一个神奇的 "},{type:a,tag:i,props:{},children:[{type:b,value:"HEAD 指针"}]},{type:b,value:"，它指向某个分支，表示当前提交提往何方。"}]},{type:b,value:e},{type:a,tag:F,props:{id:ed},children:[{type:a,tag:k,props:{href:"#%E6%96%B0%E5%BB%BA%E5%88%86%E6%94%AF",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ed}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"我们可以以某个所处分支作为源，创建一个分支："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git checkout -b "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"new-branch\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"也可以不要源，创建一个孤儿分支（创建后工作区文件虽然在已 add 到暂存区，但处于更新未提交状态，可以直接删除某些不要的文件而后再 commit -am，以得到一个新分支的初始提交）："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git checkout --orphan "}]},{type:a,tag:c,props:{style:A},children:[{type:b,value:"\"new-orphan-branch\""}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:ee},children:[{type:a,tag:k,props:{href:"#%E5%88%87%E6%8D%A2",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ee}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:cr},{type:a,tag:i,props:{},children:[{type:b,value:"git branch"}]},{type:b,value:" 命令可以查看当前所有的分支，通过 "},{type:a,tag:i,props:{},children:[{type:b,value:"git checkout"}]},{type:b,value:" 可以切换到另一个分支："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git checkout new-branch"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:ef},children:[{type:a,tag:k,props:{href:"#%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E5%88%86%E6%94%AF",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ef}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"一般而言，拉取下来的仓库处于默认的 master 分支，想要拉取某个非 master 分支到本地，可以通过："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git clone -b dev https:\u002F\u002Fe.coding.net\u002Fyunboo\u002FsmartCampus\u002Frunning-platform.git"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:eg},{type:a,tag:i,props:{},children:[{type:b,value:"dev"}]},{type:b,value:"，便是目标分支。"}]},{type:b,value:e},{type:a,tag:F,props:{id:eh},children:[{type:a,tag:k,props:{href:"#%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:eh}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"有时，我们想直接将远程某个分支合并到当前分支，那么直接："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git merge certain-branch"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:F,props:{id:ei},children:[{type:a,tag:k,props:{href:"#%E5%86%B2%E7%AA%81",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ei}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在合并、拉取其他分支时，有可能两个分支都对某文件的某处进行了修改，这样便无法快速合并，便会产生冲突，此时需要手动去解决冲突。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"在解决完冲突后，再提交便可。"}]},{type:b,value:e},{type:a,tag:H,props:{id:by},children:[{type:a,tag:k,props:{href:"#%E5%9B%9E%E6%BB%9A",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:by}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"每次提交都会生成一个 sha1 加密、以 16 进制显示的 "},{type:a,tag:i,props:{},children:[{type:b,value:"commit id"}]},{type:b,value:"，你比如，由于时间与地域的关系，我们有如下三次提交："}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:a,tag:aM,props:{alt:aN,src:"https:\u002F\u002Fimg-blog.csdnimg.cn\u002F20210312161614379.png?x-oss-process=image\u002Fwatermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNTI5ODg=,size_16,color_FFFFFF,t_70"},children:[]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"由于某些原因，在一番操作之后（工作区有一些更新还未提交）我们需要回到版本 "},{type:a,tag:i,props:{},children:[{type:b,value:"commit 06818..."}]},{type:b,value:"。这时，我们可以这样："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git reset --soft 06818"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"这会保留本地未提交的修改，同时将未修改的文件退回到 06818 版本。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"我们也可以："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git reset --hard 06818"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"这样会干掉本地所有修改，直接退回 06818 版本。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"但有时，我们只想干掉中间版本，这时可以通过："}]},{type:b,value:e},{type:a,tag:t,props:{className:[u]},children:[{type:a,tag:v,props:{className:[w],style:x},children:[{type:a,tag:i,props:{},children:[{type:a,tag:c,props:{className:[f]},children:[{type:a,tag:c,props:{style:d},children:[{type:b,value:"git revert d89ff"}]}]},{type:b,value:e},{type:a,tag:c,props:{className:[f]},children:[]}]}]}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"这样会触发一次新的提交，只去除某次指定的提交。"}]}]},dir:ck,path:"\u002F2021-001",extension:cl,createdAt:aF,updatedAt:aF}],["SET_NEXT_POST",{slug:"2020-009",title:"SpringBoot 速通 1：Hello, Spring Boot",date:"2020-11-06T00:00:00.000Z",category:"quick-start",toc:[{id:bz,depth:W,text:bz},{id:ej,depth:W,text:ek},{id:el,depth:G,text:em},{id:en,depth:G,text:cv},{id:eo,depth:G,text:ep},{id:eq,depth:W,text:er},{id:bA,depth:G,text:bA},{id:bB,depth:G,text:bB},{id:bC,depth:G,text:bC}],body:{type:bE,children:[{type:a,tag:X,props:{id:bz},children:[{type:a,tag:k,props:{href:"#%E6%A5%94%E5%AD%90",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bz}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"因为时间与地域的关系，陶某于 2020 年 10 月 27 日开始系统学 SpringBoot。由于出发点远不是"},{type:a,tag:aO,props:{},children:[{type:b,value:"爱"}]},{type:b,value:"，故这场学习将无与伦比地枯燥、艰辛、充满矛盾。但贫苦布衣的人生本就如此。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"“你是否愿意学习 SB，无论是顺境或逆境，富裕或贫穷，健康或疾病，快乐或忧愁，你都将毫无保留地爱她，对她忠诚直到永远？”"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:$}]},{type:b,value:e},{type:a,tag:X,props:{id:ej},children:[{type:a,tag:k,props:{href:"#spring-%E5%BF%85%E8%A6%81%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ek}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"由于 Java 历史之悠久、Spring 框架之繁荣，使用 Spring Boot 时，不得不预先掌握一些通用概念。包括但不限于："}]},{type:b,value:e},{type:a,tag:H,props:{id:el},children:[{type:a,tag:k,props:{href:"#java-bean-%E4%B8%8E-pojo-%E4%B8%8E-spring-bean",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:em}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"Java Bean 诞生在很久很久以前，那个桌面应用开发百花齐放的时代。其出生的本意是，通过编写"},{type:a,tag:aO,props:{},children:[{type:b,value:es}]},{type:b,value:"，利用"},{type:a,tag:aO,props:{},children:[{type:b,value:"运行时可以读取到类全部属性的技术（也就是反射）"}]},{type:b,value:"，实现诸如 Button、TextArea、Text 等等可视化组件的封装，以便进行类似于某 Basic 拖拽式桌面应用开发。而此间的 "},{type:a,tag:i,props:{},children:[{type:b,value:es}]},{type:b,value:" 便是 Java Bean，它首先是一个 Java 类，其次需要满足一些既定规范："}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"具有一个无参构造函数"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"所有属性都声明为 "},{type:a,tag:i,props:{},children:[{type:b,value:et}]},{type:b,value:"，通过声明为 "},{type:a,tag:i,props:{},children:[{type:b,value:eu}]},{type:b,value:" 的形如 "},{type:a,tag:i,props:{},children:[{type:b,value:"getCertainAttr"}]},{type:b,value:" 的 getter 方法获取属性、形如 "},{type:a,tag:i,props:{},children:[{type:b,value:"setCertainAttr"}]},{type:b,value:" 的 setter 方法设置属性。特殊地，布尔类型的 getter 方法形如 "},{type:a,tag:i,props:{},children:[{type:b,value:"isCertainAtrr"}]},{type:b,value:aP}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"可序列化（继承自 Serializable，本意为了保存组件状态，以便还原状态（比如保存、关闭后，再次打开项目），继续开发）"}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"当然，在桌面组件化开发的市场上，Java 不是很成功（主要是 Sun 公司），但 Java Bean 是无辜的，好不容易编的一套规范，也许可以放在服务端开发上。于是 Java Bean 成了 MVC 中的 M，主要用以传递数据、更方便地与持久层互动。但由于 Java Bean 过分轻量，与我 Sun 堂堂 企业级应用 格格不入（需要开发者去反复地自行实现一些简单、低级的功能），这无疑增加了高贵的、只想关注业务逻辑的企业级应用开发者们的心智负担，于是基于 JB，更加周到的 EJB（Enterprise Java Bean）应运而生。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"然而，周到的代价是繁琐，很快，EJB 就失去了贪婪但懒惰的人们的宠爱。更有甚者，高调吹捧 "},{type:a,tag:i,props:{},children:[{type:b,value:"Plain Old Java Object"}]},{type:b,value:"（也有言曰 "},{type:a,tag:i,props:{},children:[{type:b,value:"Plain Ordinary Java Object"}]},{type:b,value:"，意译过来就是，平淡无奇的 Java 对象），想要来一场 Java 届的伟大的文艺复兴。按照业界共识，一个 POJO 无需遵循 Java Bean 的上古规范，理应淋漓尽致地体现 "},{type:a,tag:i,props:{},children:[{type:b,value:"plain"}]},{type:b,value:"："}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"属性声明为 "},{type:a,tag:i,props:{},children:[{type:b,value:et}]},{type:b,value:" ，通过 "},{type:a,tag:i,props:{},children:[{type:b,value:eu}]},{type:b,value:" 的 getter 、setter 方法获取、设置属性"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"不继承自任何类"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"不实现任何接口"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"不被任何框架侵入"}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"理想状态下，POJO 用于数据传递，以便更自如地与 DAO 层（也就是持久层）交互。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"后来，作为革命的一方里程碑，一个叫 Spring 的框架出生了。该框架通过自带的 "},{type:a,tag:i,props:{},children:[{type:b,value:"Spring 容器"}]},{type:b,value:"，对对象进行管理，再辅助以 IOC、AOP 技术，既避免了繁琐，又保障了安全、减少了心智负担（既可以贪，又可以懒）。而此间的类，无需规范，不管你 POJO 不 POJO、EJB 不 EJB，只要能为容器所管理即可。同时，出于爱与敬意，此间的类也被叫做 Bean，又为人唤作 "},{type:a,tag:i,props:{},children:[{type:b,value:"Spring Bean"}]},{type:b,value:aP}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"此外，Java 世界的 Bean 取其 "},{type:a,tag:i,props:{},children:[{type:b,value:"咖啡豆"}]},{type:b,value:" 之意，妙哉。"}]},{type:b,value:e},{type:a,tag:H,props:{id:en},children:[{type:a,tag:k,props:{href:"#ioc",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:cv}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:eg},{type:a,tag:i,props:{},children:[{type:b,value:cv}]},{type:b,value:"，即 Inversion Of Control，直译为"},{type:a,tag:i,props:{},children:[{type:b,value:"控制反转"}]},{type:b,value:"。所谓反转，可以理解为 转变原本的 A Call B，为 A Wait For B。原本 A 中想要使用 B 中的功能，需要自行实例化 B，这样的缺点在于，一旦 B 有所改变（方法等调用方式有所变更），迫使 A 也要修改。而有了 IOC，类与类间的依赖统一交由容器进行管理，类与类间解耦，故又被叫作 "},{type:a,tag:i,props:{},children:[{type:b,value:"依赖注入"}]},{type:b,value:aP}]},{type:b,value:e},{type:a,tag:H,props:{id:eo},children:[{type:a,tag:k,props:{href:"#aop",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:ep}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"所谓，AOP 即 Aspect Oriented Programming，直译为 "},{type:a,tag:i,props:{},children:[{type:b,value:"面向切面编程"}]},{type:b,value:"。此前，对于一些重复的 日志记录、事务书写 的过程，开发者们需要一遍一遍地复制粘贴。此后，通过动态代理技术，这些过程宛如立身于一个切面，不在三界之中，独善五行之外。"}]},{type:b,value:e},{type:a,tag:X,props:{id:eq},children:[{type:a,tag:k,props:{href:"#%E5%85%B3%E4%BA%8E-spring-boot",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:er}]},{type:b,value:e},{type:a,tag:H,props:{id:bA},children:[{type:a,tag:k,props:{href:"#%E6%A6%82%E8%A7%88",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bA}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"使用大于六级的水平，意译官网的 overview 中关于 SB 的介绍为："}]},{type:b,value:e},{type:a,tag:"blockquote",props:{},children:[{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"SB 使得创建 可独立运行、生产级、基于 Spring 框架的应用 变得"},{type:a,tag:"del",props:{},children:[{type:b,value:"巨几把"}]},{type:b,value:"简单，你所要做的，仅仅是运行应用而已。"}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"简而言之，我们从 减少心智负担 出发，整合了 Spring 框架与一些三方库，以便你可以以最少的配置进行 Spring 应用开发。"}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:j,props:{},children:[{type:b,value:"总之，主张“约定优于配置”的 Spring Boot，使 Spring 开发无比简洁、极其快速。"}]},{type:b,value:e},{type:a,tag:H,props:{id:bB},children:[{type:a,tag:k,props:{href:"#%E7%89%B9%E6%80%A7",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bB}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"创建可独立运行的 Spring 应用"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"内置 Tomcat、Jetty 或 Undertow，无需部署 WAR 文件"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"提供解放双手、简化构建配置的 "},{type:a,tag:i,props:{},children:[{type:b,value:"starter"}]}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"自动、即时地配置 Spring 框架、三方库"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"提供 准生产 的特性，你比如度量指标、健康检查、加载配置信息"}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:b,value:"绝无代码生成，绝不需 xml 配置"}]},{type:b,value:e}]},{type:b,value:e},{type:a,tag:H,props:{id:bC},children:[{type:a,tag:k,props:{href:"#%E5%8F%82%E8%80%83",ariaHidden:o,tabIndex:p},children:[{type:a,tag:c,props:{className:[q,r]},children:[]}]},{type:b,value:bC}]},{type:b,value:e},{type:a,tag:as,props:{},children:[{type:b,value:e},{type:a,tag:M,props:{},children:[{type:a,tag:k,props:{href:"https:\u002F\u002Fmp.weixin.qq.com\u002Fs?__biz=MzAxOTc0NzExNg==&mid=2665513115&idx=1&sn=da30cf3d3f163d478748fcdf721b6414#rd",rel:[cm,cn,co],target:cp},children:[{type:b,value:"Java 帝国之 Java bean (上）"}]}]},{type:b,value:e},{type:a,tag:M,props:{},children:[{type:a,tag:k,props:{href:"https:\u002F\u002Fmp.weixin.qq.com\u002Fs?__biz=MzAxOTc0NzExNg==&mid=2665513118&idx=1&sn=487fefb8fa7efd59de6f37043eb21799#rd",rel:[cm,cn,co],target:cp},children:[{type:b,value:"Java 帝国之 Java bean（下）"}]}]},{type:b,value:e}]}]},dir:ck,path:"\u002F2020-009",extension:cl,createdAt:aF,updatedAt:aF}]]}}("element","text","span","color: #24292F","\n","line","color: #CF222E","color: #0550AE","code","p","a","color: #8250DF","color: #6E7781"," ","true",-1,"icon","icon-link",", ","div","nuxt-content-highlight","pre","shiki","background-color: #ffffff","=","let","color: #0A3069","(","1","2","color: #953800","h4",3,"h3"," foo ","); ","log","3","li","  ","foo.",") ",".","=\u003E"," [","foo",") {","((",2,"h2"," i ",";","4","...","  }"," {","    ","function","}","];","\"bar\"","、","Symbol","for","    console."," bar "," };","new"," (","bar","(); ","this","ul","() {","  console.","\"foo\"","map","i","+","==="," console.","b"," b;"," { a: ","add","2022-03-02T05:55:00.365Z","12","includes","\u002F\u002F false","return",", b: ","\"a\"","img","在这里插入图片描述","strong","。","解构赋值","基本数据类型","对象","此外","一些功能扩展","字符串的扩展","数组的扩展","函数的扩展","对象的扩展","数据结构的扩展","10","(i);","\u002F\u002F true","[","\u003E","  .","} ","，你比如：","Object","set","Set","delete","clear","saySth","();","简介","基本概念","配置","安装","初始化仓库","基本操作","commit","push","pull","stash","分支","回滚","楔子","概览","特性","参考","Promise","root","var","0"," { ","name","123","\"foobar\"","repeat","\"8\"","\"handled\"","\u002F\u002F [\"1handled\", \"2handled\", \"3handled\", \"4handled\"]","filter","]","find","fill",": ","of","\u002F\u002F 1 2 4 3","keys","forEach"," a "," quz ","if",");",", c: ","values","([","]);","foo; ","class","constructor","resolve","reject","const","\u002F",".md","nofollow","noopener","noreferrer","_blank","git push -u origin master","通过 ","git commit","-am","git push","IOC",{},"let--const","let & const","class-语法糖","class 语法糖","symbol","promise","; i ","\u003C=","; i","++","(i); ","24","\"baz\""," [foo ",", bar ","] ","undefined","]; ","null","padStart","模板字符串","console.","].","5","7","(foo); ","遍历方式"," foo) {"," foo.","()) {","entries","参数缺省值","箭头函数","item"," item ","};","变量和属性同名","对象的函数属性可以简写","你比如：","  },","\u002F\u002F bar","\"whatever\"","bar.","对象的比较","对象的遍历","(foo).","\u002F\u002F 1 2 3","\u002F\u002F Set(2) {1, 2}","has","\u002F\u002F SetIterator {1, 2}","Map","([[","get",".a "," a;",".b ","super","foo[",")] ","fulfilled","rejected","req","request"," (req.status ","200","(req.data);","  } ","else","async","await","basic-skill","版本库repository","版本库（repository）","工作区暂存区head","工作区、暂存区、HEAD","nameemailssh-key","name、email、ssh key","get-started","Get Started",".git",".gitignore","email","从本地文件夹","git add","git commit -m ","在一番修改再 add 再 commit 后，推送到远端：","-u","从远程仓库","新建分支","切换","拉取远端分支","所谓 ","合并分支","冲突","spring-必要基础知识点","Spring 必要基础知识点","java-bean-与-pojo-与-spring-bean","Java Bean 与 POJO 与 Spring Bean","ioc","aop","AOP","关于-spring-boot","关于 Spring Boot","符合既定规范的类","private","public")));